#include<conio.h>
#include<stdio.h>
#include<string.h>
int queens_row[n][n]={{0}};
void Afficher()
{
    int i,j;
    for(i=0;i<n;i++)
    {
     for(j=0;j<n;j++)
        printf("%d ",queens_row[i][j]);
     printf("\n");
    }
    printf("\n");
}
int indice_reine(int ligne)
{
    int j;
    for(j=0;j<n;j++)
      {
        if(queens_row[ligne][j]==1)
         return j;//retoutn l'indice de la reine dans la ligne i
      }
     return 0;
}
 
int Libre_L(int& ligne)
{
    int j,test=0;
     for(j=0;j<n;j++)
     {
         test+=queens_row[ligne][j];//test si on peut poser une reine sur cette ligne si la somme 0 la ligne est libre sinon elle n'est pas libre
     }
     if(test==0)return 1;
     else return 0;
}
 
int Libre_C(int& colonne)
{
    int j,test=0;
     for(j=0;j<n;j++)
     {
         test+=queens_row[j][colonne];//test si on peut poser une reine sur cette colonne si la somme 0 la colonne est libre sinon elle n'est pas libre
     }
     if(test==0)return 1;
     else return 0;
}
 
 
int Libre_D(int& ligne ,int& Colonne)
{
    int Test=0,i,j,r=0;
    for(i=ligne,j=Colonne;(i>=0 && j<n);i--,j++){Test+=queens_row[i][j];r+=Test;}
    for(i=ligne,j=Colonne;(i>=0 && j>=0);i--,j--){Test+=queens_row[i][j];r+=Test;}
    for(i=ligne,j=Colonne;(i<n && j>=0);i++,j--){Test+=queens_row[i][j];r+=Test;}
    for(i=ligne,j=Colonne;(i<n && j<n);i++,j++){Test+=queens_row[i][j];r+=Test;}
    if(r==0)return 1;//test sur les 4 diagonales si la somme est 0 ils sont libre sinon on peux pas poser une reines 
    else return 0;
}
int Bonne_case(int ligne,int colonne)
{
    if(Libre_L(ligne))
         if(Libre_C(colonne))
            if(Libre_D(ligne,colonne))
               return 1;
    return 0;
}
 
 
int k=1;
 
void poser_reine(int i,int j)//pose la reine et trouver la 1er solution
{
    int a;
    if(i>-1)
    if(i<n)
    {
        if(Bonne_case(i,j)&&j<n)// si la ligne et la colonne et la diagonale est libre
        {
            queens_row[i][j]=1;//on met une reine
            poser_reine(i+1,0);//puis on sote la ligne pour mettre une autre reine
        }
        else
        {
            if(j<n)
                poser_reine(i,j+1);
            else
            {
                  a=indice_reine(i-1);//sinon j'enregistre l'indice de la colonne de lau
                  queens_row[i-1][a]=0;
                  poser_reine(i-1,a+1);//pous je cherche un autre case libre pour mettre la reine
            }
        }
    }else {printf("%d\n",k++);Afficher();a=indice_reine(i-1);queens_row[i-1][a]=0;poser_reine(i-1,a+1);}
}
int main()
{
    poser_reine(0,0);
    getch();
    return 0;
}